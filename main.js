
var staging = true;
var transak_public_api_key = "43087539-a03c-4746-943b-2651b5d11058";
var bscscan_api_key = "8232CNUHG3EH1ZDAZHJIZQBTZPZZ97ED23";
var use_metamask = false;
var non_metamask_account;
var address;
var initialBalanceBeforeBuy;
var newBalance = 0;
var balanceChange = 0;

var pancakeswap_router = "0x10ED43C718714eb63d5aA57B78B54704E256024E";
var pancakeswap_abi = [
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"_factory",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"_WETH",
             "type":"address"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"constructor"
    },
    {
       "inputs":[
          
       ],
       "name":"WETH",
       "outputs":[
          {
             "internalType":"address",
             "name":"",
             "type":"address"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"tokenA",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"tokenB",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"amountADesired",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountBDesired",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountAMin",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountBMin",
             "type":"uint256"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"addLiquidity",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"amountA",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountB",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"liquidity",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"token",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"amountTokenDesired",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountTokenMin",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountETHMin",
             "type":"uint256"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"addLiquidityETH",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"amountToken",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountETH",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"liquidity",
             "type":"uint256"
          }
       ],
       "stateMutability":"payable",
       "type":"function"
    },
    {
       "inputs":[
          
       ],
       "name":"factory",
       "outputs":[
          {
             "internalType":"address",
             "name":"",
             "type":"address"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountOut",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"reserveIn",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"reserveOut",
             "type":"uint256"
          }
       ],
       "name":"getAmountIn",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"amountIn",
             "type":"uint256"
          }
       ],
       "stateMutability":"pure",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountIn",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"reserveIn",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"reserveOut",
             "type":"uint256"
          }
       ],
       "name":"getAmountOut",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"amountOut",
             "type":"uint256"
          }
       ],
       "stateMutability":"pure",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountOut",
             "type":"uint256"
          },
          {
             "internalType":"address[]",
             "name":"path",
             "type":"address[]"
          }
       ],
       "name":"getAmountsIn",
       "outputs":[
          {
             "internalType":"uint256[]",
             "name":"amounts",
             "type":"uint256[]"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountIn",
             "type":"uint256"
          },
          {
             "internalType":"address[]",
             "name":"path",
             "type":"address[]"
          }
       ],
       "name":"getAmountsOut",
       "outputs":[
          {
             "internalType":"uint256[]",
             "name":"amounts",
             "type":"uint256[]"
          }
       ],
       "stateMutability":"view",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountA",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"reserveA",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"reserveB",
             "type":"uint256"
          }
       ],
       "name":"quote",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"amountB",
             "type":"uint256"
          }
       ],
       "stateMutability":"pure",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"tokenA",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"tokenB",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"liquidity",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountAMin",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountBMin",
             "type":"uint256"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"removeLiquidity",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"amountA",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountB",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"token",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"liquidity",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountTokenMin",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountETHMin",
             "type":"uint256"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"removeLiquidityETH",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"amountToken",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountETH",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"token",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"liquidity",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountTokenMin",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountETHMin",
             "type":"uint256"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"removeLiquidityETHSupportingFeeOnTransferTokens",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"amountETH",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"token",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"liquidity",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountTokenMin",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountETHMin",
             "type":"uint256"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          },
          {
             "internalType":"bool",
             "name":"approveMax",
             "type":"bool"
          },
          {
             "internalType":"uint8",
             "name":"v",
             "type":"uint8"
          },
          {
             "internalType":"bytes32",
             "name":"r",
             "type":"bytes32"
          },
          {
             "internalType":"bytes32",
             "name":"s",
             "type":"bytes32"
          }
       ],
       "name":"removeLiquidityETHWithPermit",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"amountToken",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountETH",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"token",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"liquidity",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountTokenMin",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountETHMin",
             "type":"uint256"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          },
          {
             "internalType":"bool",
             "name":"approveMax",
             "type":"bool"
          },
          {
             "internalType":"uint8",
             "name":"v",
             "type":"uint8"
          },
          {
             "internalType":"bytes32",
             "name":"r",
             "type":"bytes32"
          },
          {
             "internalType":"bytes32",
             "name":"s",
             "type":"bytes32"
          }
       ],
       "name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"amountETH",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"address",
             "name":"tokenA",
             "type":"address"
          },
          {
             "internalType":"address",
             "name":"tokenB",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"liquidity",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountAMin",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountBMin",
             "type":"uint256"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          },
          {
             "internalType":"bool",
             "name":"approveMax",
             "type":"bool"
          },
          {
             "internalType":"uint8",
             "name":"v",
             "type":"uint8"
          },
          {
             "internalType":"bytes32",
             "name":"r",
             "type":"bytes32"
          },
          {
             "internalType":"bytes32",
             "name":"s",
             "type":"bytes32"
          }
       ],
       "name":"removeLiquidityWithPermit",
       "outputs":[
          {
             "internalType":"uint256",
             "name":"amountA",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountB",
             "type":"uint256"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountOut",
             "type":"uint256"
          },
          {
             "internalType":"address[]",
             "name":"path",
             "type":"address[]"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"swapETHForExactTokens",
       "outputs":[
          {
             "internalType":"uint256[]",
             "name":"amounts",
             "type":"uint256[]"
          }
       ],
       "stateMutability":"payable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountOutMin",
             "type":"uint256"
          },
          {
             "internalType":"address[]",
             "name":"path",
             "type":"address[]"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"swapExactETHForTokens",
       "outputs":[
          {
             "internalType":"uint256[]",
             "name":"amounts",
             "type":"uint256[]"
          }
       ],
       "stateMutability":"payable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountOutMin",
             "type":"uint256"
          },
          {
             "internalType":"address[]",
             "name":"path",
             "type":"address[]"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"swapExactETHForTokensSupportingFeeOnTransferTokens",
       "outputs":[
          
       ],
       "stateMutability":"payable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountIn",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountOutMin",
             "type":"uint256"
          },
          {
             "internalType":"address[]",
             "name":"path",
             "type":"address[]"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"swapExactTokensForETH",
       "outputs":[
          {
             "internalType":"uint256[]",
             "name":"amounts",
             "type":"uint256[]"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountIn",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountOutMin",
             "type":"uint256"
          },
          {
             "internalType":"address[]",
             "name":"path",
             "type":"address[]"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"swapExactTokensForETHSupportingFeeOnTransferTokens",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountIn",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountOutMin",
             "type":"uint256"
          },
          {
             "internalType":"address[]",
             "name":"path",
             "type":"address[]"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"swapExactTokensForTokens",
       "outputs":[
          {
             "internalType":"uint256[]",
             "name":"amounts",
             "type":"uint256[]"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountIn",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountOutMin",
             "type":"uint256"
          },
          {
             "internalType":"address[]",
             "name":"path",
             "type":"address[]"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"swapExactTokensForTokensSupportingFeeOnTransferTokens",
       "outputs":[
          
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountOut",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountInMax",
             "type":"uint256"
          },
          {
             "internalType":"address[]",
             "name":"path",
             "type":"address[]"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"swapTokensForExactETH",
       "outputs":[
          {
             "internalType":"uint256[]",
             "name":"amounts",
             "type":"uint256[]"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "inputs":[
          {
             "internalType":"uint256",
             "name":"amountOut",
             "type":"uint256"
          },
          {
             "internalType":"uint256",
             "name":"amountInMax",
             "type":"uint256"
          },
          {
             "internalType":"address[]",
             "name":"path",
             "type":"address[]"
          },
          {
             "internalType":"address",
             "name":"to",
             "type":"address"
          },
          {
             "internalType":"uint256",
             "name":"deadline",
             "type":"uint256"
          }
       ],
       "name":"swapTokensForExactTokens",
       "outputs":[
          {
             "internalType":"uint256[]",
             "name":"amounts",
             "type":"uint256[]"
          }
       ],
       "stateMutability":"nonpayable",
       "type":"function"
    },
    {
       "stateMutability":"payable",
       "type":"receive"
    }
 ]


//Click Events
document.addEventListener('click', function (event) {

    // If the clicked element doesn't have the right selector, bail
    if (event.target.matches('#use-metamask-wallet')) {
        use_metamask = true;
        window.web3 = new Web3(web3.currentProvider);
        window.web3.eth.requestAccounts().then((value) => {
            address = value[0];
            initializeWidget();
        });
    }
    else if (event.target.matches('#use-disposable-wallet')) {
        use_metamask = false;
        window.web3 = new Web3(new Web3.providers.HttpProvider("https://bsc-dataseed1.binance.org:443"));
        generateDisposableWallet();
        initializeWidget();
    }
    else {
        return;
    }
    // Don't follow the link
    event.preventDefault();


}, false);

function generateDisposableWallet() {
    non_metamask_account = window.web3.eth.accounts.create();
    address = non_metamask_account["address"];
}

function listenForBalanceChange() {
    setTimeout(function () {
        fetch('https://api.bscscan.com/api?module=account&action=balance&address=' + address + '&apikey=' + bscscan_api_key + '')
            .then(function (response) {
                return response.json();
            }).then(function (balanceJson) {
                if (initialBalanceBeforeBuy != balanceJson["result"]) {
                    newBalance = balanceJson["result"];
                    balanceChange = newBalance - initialBalanceBeforeBuy;
                }
            })
        if (balanceChange == 0) {
            listenForBalanceChange();
        }
        else {
            document.getElementById("step-2-bar").style = "display:none";
            document.getElementById("step-2").style = "display:none";
            document.getElementById("step-3-bar").style = "display:flex";
            document.getElementById("step-3").style = "display:flex";
            exchangeBNBtoTAU();
        }
    }, 3000);
};

function setupBalanceListener() {

    fetch('https://api.bscscan.com/api?module=account&action=balance&address=' + address + '&apikey=' + bscscan_api_key + '')
        .then(function (response) {
            return response.json();
        })
        .then(function (balanceJson) {
            initialBalanceBeforeBuy = balanceJson["result"];
            listenForBalanceChange()
        });
}

function exchangeBNBtoTAU(){
    //balanceChange holds what we need to exchange now - some fees that are needed for the exchange and bridge later
    if(use_metamask == false){
        let WBNBAddress ="0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c";
        let TAUAddress = "0x70d7109d3afe13ee8f9015566272838519578c6b";
        let privateKey = Buffer.from(non_metamask_account.privateKey.slice(2), 'hex')  ;
        let contract = new window.web3.eth.Contract(pancakeswap_abi, pancakeswap_router, {from: address});
        let data = contract.methods.swapExactETHForTokens(
            window.web3.utils.toHex(balanceChange),
            [WBNBAddress,
            TAUAddress],
            address,
            window.web3.utils.toHex(Math.round(Date.now()/1000)+60*20),
        );

        let count = await window.web3.eth.getTransactionCount(address);
        let rawTransaction = {
            "from":address,
            "gasPrice":window.web3.utils.toHex(5000000000),
            "gasLimit":window.web3.utils.toHex(290000),
            "to":pancakeswap_router,
            "value":window.web3.utils.toHex(balanceChange),
            "data":data.encodeABI(),
            "nonce":window.web3.utils.toHex(count)
        };

        let transaction = new Tx(rawTransaction, { 'common': BSC_FORK });
        transaction.sign(privateKey);
        let result = await window.web3.eth.sendSignedTransaction('0x' + transaction.serialize().toString('hex'));
    }
    bridgeTAUtoLamden()
    
}

function bridgeTAUtoLamden(){

}

function initializeWidget() {
    let iframe_url;
    if (staging == true) {
        iframe_url = "https://staging-global.transak.com/?apiKey=" + transak_public_api_key + "&redirectURL=https://transak.com&cryptoCurrencyCode=BNB&network=bsc&walletAddress=" + address + "&disableWalletAddressForm=true&exchangeScreenTitle=Buying%20BNB%20to%20get%20Lamden%20TAU&isFeeCalculationHidden=true&isDisableCrypto=True";
    }
    else {
        iframe_url = "https://global.transak.com/?apiKey=" + transak_public_api_key + "&redirectURL=https://transak.com&cryptoCurrencyCode=BNB&network=bsc&walletAddress=" + address + "&disableWalletAddressForm=true&exchangeScreenTitle=Buying%20BNB%20to%20get%20Lamden%20TAU&isFeeCalculationHidden=true&isDisableCrypto=True";
    }
    let ifrm = document.createElement("iframe");
    ifrm.setAttribute("src", iframe_url);
    ifrm.setAttribute("height", 625);
    ifrm.setAttribute("style", "display: block; width: 100%; max-height: 625px; max-width: 500px;border:0");
    document.getElementById("step-2").appendChild(ifrm);
    document.getElementById("step-1-bar").style = "display:none";
    document.getElementById("step-1").style = "display:none";
    document.getElementById("step-2-bar").style = "display:flex";
    document.getElementById("step-2").style = "display:flex";
    setupBalanceListener();
}